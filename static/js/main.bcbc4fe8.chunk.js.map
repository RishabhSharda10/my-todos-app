{"version":3,"sources":["components/TodoForm.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoForm","props","useState","input","setInput","addTodoMethod","onSubmit","event","preventDefault","title","completed","value","onChange","target","TodoList","Layout","Header","Footer","Sider","Content","gridStyle","width","textAlign","todos","map","todo","index","Grid","style","App","settodos","useEffect","axios","get","then","response","data","className","newTodo","post","updatedTodos","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LA+CeA,MA3Cf,SAAkBC,GAEd,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACOC,EAAiBJ,EAAjBI,cAwBP,OACI,8BACI,uBAAMC,SAxBQ,SAACC,GACnBA,EAAMC,iBAEFH,EAAc,CACVI,MAAMN,EACNO,WAAU,IAKdN,EAAS,KAcT,UACI,uBACAO,MAAOR,EACPS,SAbY,SAACL,GACrBH,EAASG,EAAMM,OAAOF,UAed,oD,8BCDDG,MAjCf,SAAkBb,GAE6Bc,IAAnCC,OAAmCD,IAA3BE,OAA2BF,IAAnBG,MAAmBH,IAAZI,QAA/B,IAEMC,EAAY,CACdC,MAAO,MACPC,UAAW,UAIXC,EAAStB,EAATsB,MAEJ,OACQ,8BACY,cAAC,IAAD,CAAMd,MAAM,aAAZ,SAEIc,EAAMC,KAAI,SAACC,EAAKC,GAEZ,OAEI,cAAC,IAAKC,KAAN,CAAWC,MAAOR,EAAlB,SACKK,EAAKhB,OADwBiB,W,iBC8BvDG,MA3Cf,WAEE,MAA0B3B,mBAAS,IAAnC,mBAAOqB,EAAP,KAAcO,EAAd,KA8BA,OA5BAC,qBAAU,WAENC,IAAMC,IAAI,gCACPC,MAAK,SAAUC,GACdL,EAASK,EAASC,WAItB,CAACb,IAqBH,sBAAKc,UAAU,YAAf,UAEE,cAAC,EAAD,CAAUhC,cApBQ,SAACiC,GAIrBN,IAAMO,KAAK,+BAA+BD,GACzCJ,MAAK,SAAUC,GAEd,IAAMK,EAAY,sBACbjB,GADa,CACPY,EAASC,OAGpBN,EAASU,SAUT,cAAC,EAAD,CAAWjB,MAAOA,QCpCTkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.bcbc4fe8.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\n\r\n\r\n\r\nfunction TodoForm(props) {\r\n\r\n    const [input, setInput] = useState('');\r\n    const {addTodoMethod} = props;\r\n\r\n    const submitHandler = (event) =>{\r\n        event.preventDefault();\r\n        \r\n            addTodoMethod({\r\n                title:input,\r\n                completed:false\r\n\r\n\r\n            });\r\n            \r\n            setInput('') \r\n           \r\n        }\r\n\r\n    const onChangeHandler = (event) =>{\r\n        setInput(event.target.value)\r\n        \r\n        \r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submitHandler}>\r\n                <input \r\n                value={input}\r\n                onChange={onChangeHandler}\r\n\r\n                />\r\n                <button>\r\n                    Add Todo\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoForm;\r\n","import {Card,Layout} from 'antd';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport '../App.css'\r\n\r\nfunction TodoList(props) {\r\n\r\n    const { Header, Footer, Sider, Content } = Layout;\r\n\r\n    const gridStyle = {\r\n        width: '33%',\r\n        textAlign: 'center',\r\n      };\r\n      \r\n\r\n const {todos} = props;\r\n\r\n    return (\r\n            <div>\r\n                        <Card title=\"Card Title\">\r\n                        {\r\n                            todos.map((todo,index)=>{\r\n                            \r\n                                return (\r\n                                    \r\n                                    <Card.Grid style={gridStyle} key={index}>\r\n                                        {todo.title}\r\n                                    </Card.Grid>\r\n                                )\r\n                            \r\n                            })\r\n                        }\r\n                        </Card>\r\n                \r\n            </div>\r\n    )\r\n }\r\n\r\nexport default TodoList;\r\n","import  React, {useState,useEffect}  from 'react';\nimport Todoform from './components/TodoForm';\nimport Todolist from './components/TodoList';\nimport './App.css';\nimport TodoForm from './components/TodoForm';\nimport axios from 'axios' \n\n\n\n\n\n\nfunction App() {\n\n  const [todos, settodos] = useState([]);\n\n  useEffect(() => {\n\n      axios.get('http://localhost:5000/todos/')\n        .then(function (response) {\n          settodos(response.data);\n        })\n\n\n    },[todos]);\n\n\n  const addTodoMethod = (newTodo) =>{\n\n\n\n    axios.post('http://localhost:5000/todos/',newTodo)\n    .then(function (response) {\n\n      const updatedTodos = [\n        ...todos,response.data\n  \n      ] \n      settodos(updatedTodos);\n    });    \n\n  }    \n\n\n  return (\n    <div className=\"container\">\n\n      <TodoForm addTodoMethod={addTodoMethod}/>\n      <Todolist  todos={todos} />\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}